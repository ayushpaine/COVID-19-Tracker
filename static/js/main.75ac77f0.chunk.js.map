{"version":3,"sources":["Stats.js","CasesMap.js","Table.js","sort.js","Graph.js","App.js","reportWebVitals.js","index.js"],"names":["Stats","title","cases","total","Card","className","CardContent","Typography","color","CasesMap","center","zoom","MapContainer","TileLayer","attribution","url","Table","countries","map","country","sortData","data","sortedData","sort","a","b","options","maintainAspectRatio","legend","display","elements","point","radius","tooltips","mode","intersect","callbacks","label","tooltipItem","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","useStyles","makeStyles","root","background","border","borderRadius","boxShadow","App","setCountries","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","mapZoom","resp","name","iso2","getCountriesData","classes","style","s","FormControl","TextField","select","variant","helperText","MenuItem","todayCases","todayRecovered","recovered","todayDeaths","deaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75ac77f0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nfunction Stats({ title, cases, total }) {\r\n  return (\r\n    <Card className=\"statCard\">\r\n      <CardContent>\r\n        <Typography color=\"textSecondary\" className=\"statTitle\">\r\n          {title}\r\n        </Typography>\r\n        <h2 className=\"statCases\"> {cases} </h2>\r\n        <Typography color=\"textSecondary\" className=\"statTotal\">\r\n          {total}\r\n          Total\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport \"./CasesMap.css\";\r\n\r\nfunction CasesMap({ center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <MapContainer center={center} zoom={zoom}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CasesMap;\r\n","import React from \"react\";\r\nimport \"./Table.css\";\r\n\r\nfunction Table({ countries }) {\r\n  return (\r\n    <div className=\"table\">\r\n      {countries.map((country) => (\r\n        <tr>\r\n          <td>{country.country}</td>\r\n          <td>\r\n            <strong>{country.cases}</strong>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","export const sortData = (data) => {\r\n  const sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.cases > b.cases) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n  return sortedData;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\nimport \"./Graph.css\";\r\n\r\nconst options = {\r\n  maintainAspectRatio: true,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType = \"cases\" }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n  TextField,\n} from \"@material-ui/core\";\nimport Stats from \"./Stats\";\nimport CasesMap from \"./CasesMap\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"./Table\";\nimport { sortData } from \"./sort\";\nimport LineGraph from \"./Graph\";\nimport \"leaflet/dist/leaflet.css\";\n\nconst useStyles = makeStyles({\n  root: {\n    background: \"#90caf9\",\n    border: 0,\n    borderRadius: 3,\n    color: \"#27313A\",\n    boxShadow: \" -5px 3px 82px -6px rgba(\t144, 202, 249,0.);\",\n  },\n});\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 23, lng: 78.9629 });\n  const [mapZoom, setMapZoom] = useState(4.2);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((resp) => resp.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((resp) => resp.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n\n          let sortedData = sortData(data);\n          setTableData(sortedData);\n\n          setCountries(countries);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (e) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((resp) => resp.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(5);\n      });\n  };\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 style={{ color: \"#90caf9\" }} s>\n            COVID-19 Tracker\n          </h1>\n          <FormControl className=\"App-dropdown\">\n            <TextField\n              select\n              label=\"Select\"\n              variant=\"filled\"\n              className={classes.root}\n              helperText=\"Select Your Country\"\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </TextField>\n          </FormControl>\n        </header>\n      </div>\n      <div className=\"stats\">\n        <Stats\n          title=\"Coronavirus Cases\"\n          cases={countryInfo.todayCases}\n          total={countryInfo.cases}\n        />\n        <Stats\n          title=\"Coronavirus Recovered\"\n          cases={countryInfo.todayRecovered}\n          total={countryInfo.recovered}\n        />\n        <Stats\n          title=\"Coronavirus Deaths\"\n          cases={countryInfo.todayDeaths}\n          total={countryInfo.deaths}\n        />\n      </div>\n      <CasesMap center={mapCenter} zoom={mapZoom} />\n      <div className=\"live\">\n        <Card className=\"live-card\">\n          <CardContent>\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n          </CardContent>\n        </Card>\n        <Card className=\"live-graph\">\n          <CardContent>\n            <LineGraph />\n          </CardContent>\n        </Card>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}